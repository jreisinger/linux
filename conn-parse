#!/usr/bin/perl
# Parse conntrackd logs for suspuciously high number of connections.
# Usage: zcat logs/conntrackd-stats.log.1.gz | head -10000 | ./conn-parse -
use strict;
use warnings;
use Socket;
use Time::Local;

die "Usage: $0 /var/log/conntrackd-stats.log" unless defined $ARGV[0];

my $max_ports      = 999;      # number of ports an IP has connected to
my $max_conns      = 10000;    # number of connections to a port
my $max_smtp_conns = 100;      # number of connections to port 25
my %conn;
my $earliest = time;
my $latest   = 0;
my %lines_n;

my %mon2num = qw(
  jan 1  feb 2  mar 3  apr 4  may 5  jun 6
  jul 7  aug 8  sep 9  oct 10 nov 11 dec 12
);

###################################
# Parse log file and collect data #
###################################

while (<>) {
    $lines_n{total}++;
    chomp;

    if (
        m/
        ^\w{3}\s(?<MON>\w{3})\s(?<MDAY>\d{2})                           # Mon Nov 18
        \s
        (?<HOURS>\d\d):(?<MIN>\d\d):(?<SEC>\d\d)\s(?<YEAR>\d{4})        # 06:25:02 2013
        \s+
        tcp                                                             # tcp
        \s+
        \d+                                                             # 6
        \s
        src=(?<SRC>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})                  # src=1.2.3.4
        \s
        dst=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}                          # dst=10.20.30.40
        \s
        sport=\d{1,5}                                                   # sport=53932
        \s
        dport=(?<DPORT>\d{1,5})                                         # dport=443
        /x
      )
    {
        $lines_n{matched}++;

        # Get the log timespan
        my $epoch = timelocal(
            $+{SEC}, $+{MIN}, $+{HOURS}, $+{MDAY},
            $mon2num{ lc $+{MON} } - 1,
            $+{YEAR} - 1900
        );
        $earliest = $epoch if $epoch < $earliest;
        $latest   = $epoch if $epoch > $latest;

        # Count how many times an IP address connects to port(s)
        $conn{ $+{SRC} }{ $+{DPORT} }++;
    }
}

#################
# Print report  #
#################

# Print general header
my $seconds = $latest - $earliest;
my $days = sprintf "%.2f", ($seconds) / 3600 / 24;
print 'Logs timespan: '
  . localtime($earliest) . ' -- '
  . localtime($latest)
  . " ($days days)\n";
print "Matched $lines_n{matched} out of $lines_n{total} lines\n";

print "### Connecting to too many different ports ###\n";
for my $ip (
    sort { scalar( keys %{ $conn{$b} } ) <=> scalar( keys %{ $conn{$a} } ) }
    keys %conn
  )
{
    my $ports_connected = keys $conn{$ip};
    if ( $ports_connected > $max_ports ) {
        printf "%-15s connected to %5d different ports\n", $ip,
          $ports_connected;
    }
}

# Thanks to PerlMonks - http://www.perlmonks.org/?node_id=1063511
print "### Connecting too many times to a single port ###\n";
printf "%-15s connected to TCP port %5d %9d times (%d times per minute)\n", @$_
  for sort { $b->[2] <=> $a->[2] }
  grep     { $_->[2] > $max_conns }
  map {
    my $ip = $_;
    map { [ $ip, $_, $conn{$ip}{$_}, ( $conn{$ip}{$_} / $seconds * 60 ) ] }
      keys %{ $conn{$ip} }
  }
  keys %conn;

print "### Possible spam sending ###\n";
printf "%-15s connected to TCP port %5d %9d times (%d times per minute)\n", @$_
  for sort { $b->[2] <=> $a->[2] }
  grep { $_->[1] == 25 and $_->[2] > $max_smtp_conns }
  map {
    my $ip = $_;
    map { [ $ip, $_, $conn{$ip}{$_}, ( $conn{$ip}{$_} / $seconds * 60 ) ] }
      keys %{ $conn{$ip} }
  }
  keys %conn;

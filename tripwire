#!/usr/bin/perl
# Monitor a directory to find any file changes.
use strict;
use warnings;
use Digest::SHA1;
use Any::Daemon;

my $db_file = '/tmp/tripwire_db.txt';

sub get_sha1_and_size {
    my $file = shift;

    open my $fh, $file or die "$!";
    my $sha1 = Digest::SHA1->new;
    $sha1->addfile($fh);
    close $fh;

    return $sha1->hexdigest, -s $file;
}

sub check_files {

    # old files
    open my $fh, $db_file or die "$!";
    my %old_files;
    while (<$fh>) {
        my($sha1, $size, $name) = split;
        push @{$old_files{$name}}, $size;
        push @{$old_files{$name}}, $sha1;
    }
    close $fh;

    # new files
    my %new_files;
    for my $file ( glob "*" ) {
        my($sha1, $size) = get_sha1_and_size($file);
        my $name = $file;
        push @{$new_files{$name}}, $size;
        push @{$new_files{$name}}, $sha1;
    }

    # compare hashes
    use Data::Dumper;
    for my $old_name ( keys %old_files ) {
        if ( $new_files{$old_name} ) {  # old file still exists
            my($old_size, $old_sha1) = @{$old_files{$old_name}};
            my($new_size, $new_sha1) = @{$new_files{$old_name}};
            unless ( ( $old_sha1 eq $new_sha1 ) and ( $old_size == $new_size ) ) {
                print "==> $old_name changed.\n";
                print "Was:\n";
                print "Size: ", $old_size, "\n";
                print "SHA1: ", $old_sha1, "\n\n";
                print "Is now:\n";
                print "Size: ", $new_size, "\n";
                print "SHA1: ", $new_sha1, "\n";
                print "\n";
            }
        } else {
            print "==> $old_name deleted.\n\n";
        }
    }
}

sub main {
    unless ( -e $db_file ) { # db file present?
        open my $fh, '>', $db_file or die "$!";

        # read through directory
        for my $file ( glob "*" ) {
            printf $fh "%s %5d %s\n", get_sha1_and_size($file), $file;
        }

        close $fh;
    }

    check_files();
    sleep 5;

    exit 0;
}

my $daemon = Any::Daemon->new(user=>'jreisinger',workdir=>'.');
$daemon->run(
    background=>0,
    child_task=>\&main,
    max_childs=>1,
    kill_childs=>sub{exit;}
);
